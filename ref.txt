create new cont.:
	docker run -it <image-name> (-it stands for interactive TTY)

Execute commands in a running container:
	docker exec <container-name>/<container-id> <command> (after exectuing the command terminal will return back to system default)

	docker exec -it <container-name>/<container-id> bash (terminal will stick to that cont.) 

Find Containers & Images:
	docker ps / docker container ls (only show runnning cont.)
	docker ps -a / docker container ls -a(all including stopped)
	docker images / image -ls
	

basic commands:
	docker start <container-name>/<container-id>
	docker stop <container-name>/<container-id>
	docker restart <container_id>/<container-name> ( Stops and then starts one or more containers)
	docker pull <image_name>
	docker rm <container_id>/<container-name> (Removes one or more containers)
	docker rmi <image_name> (Removes one or more images)
	docker logs <container_id> (Retrieves the logs of a container)

Port mapping(-p):
	docker run -it -p 5000:8000 <image_name> (5000: myPort, 8000: cont.Port )

Env(-e):
	docker run -it -p 5000:8000 -e key=value -e key=value <image_name>


## Run using Docker Compose

Build image:
  docker build -t <image-name> .

Spin up container
  docker run -d -p 3000:80 reactContainer .
  docker-compose up -d